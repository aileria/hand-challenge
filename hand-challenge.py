# coding=utf8

class Parser:
    cells = [0]
    sequenceIndex = 0
    cellIndex = 0
    loopLevel = 0
    sequence = None
    
    actions = {
        'ðŸ‘‰': 'nextCell',
        'ðŸ‘ˆ': 'previousCell',
        'ðŸ‘†': 'increase',
        'ðŸ‘‡': 'decrease',
        'ðŸ¤œ': 'startLoop',
        'ðŸ¤›': 'endLoop',
        'ðŸ‘Š': 'display'
    }
    
    def __init__(self, sequence):
        self.sequence = sequence
    
    @property
    def cell(self):
        return self.cells[self.cellIndex]
    
    @cell.setter
    def cell(self, value):
        self.cells[self.cellIndex] = value
    
    def nextCell(self):
        if self.cellIndex == len(self.cells) - 1:
            self.cells.append(0)
        self.cellIndex += 1
    
    def previousCell(self):
        self.cellIndex -= 1
    
    def increase(self):
        self.cell = (self.cell + 1) if self.cell != 255 else 0
    
    def decrease(self):
        self.cell = (self.cell - 1) if self.cell != 0 else 255
    
    def display(self):
        print(chr(self.cell), end='', flush=True)
        
    def startLoop(self):
        self.loopLevel += 1
        if self.cell == 0:
            self._moveToCurrentLoopEnd()
            self.loopLevel -= 1
    
    def endLoop(self):
        if self.cell != 0:
            self._moveToCurrentLoopStart()
        
    def _moveToCurrentLoopEnd(self):
        self._moveToSameLevelLoopLimit('ðŸ¤œ', 'ðŸ¤›', 1)
    
    def _moveToCurrentLoopStart(self):
        self._moveToSameLevelLoopLimit('ðŸ¤›', 'ðŸ¤œ', -1)
    
    def _moveToSameLevelLoopLimit(self, startSymbol, endSymbol, step):
        i = self.sequenceIndex
        currentLevel = self.loopLevel
        
        while (True):
            i += step
            if self.sequence[i] == endSymbol:
                if self.loopLevel == currentLevel:
                    break
                currentLevel -= 1
            elif self.sequence[i] == startSymbol:
                currentLevel += 1
        
        self.sequenceIndex = i
        
    def run(self):
        while self.sequenceIndex < len(self.sequence):
            action = getattr(self, self.actions[self.sequence[self.sequenceIndex]])
            action()
            self.sequenceIndex += 1
    

if __name__ == '__main__':
    parser = Parser('ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ¤œðŸ‘‡ðŸ‘ˆðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ¤›ðŸ‘ˆðŸ‘ŠðŸ‘‰ðŸ‘‰ðŸ‘†ðŸ‘‰ðŸ‘‡ðŸ¤œðŸ‘†ðŸ¤›ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ¤œðŸ‘‰ðŸ¤œðŸ‘‡ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ˆðŸ‘ˆðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ¤›ðŸ‘ˆðŸ‘ˆðŸ¤›ðŸ‘‰ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‰ðŸ‘‡ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘ŠðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘‰ðŸ‘‡ðŸ‘ŠðŸ‘ˆðŸ‘ˆðŸ‘†ðŸ¤œðŸ‘‰ðŸ¤œðŸ‘†ðŸ‘‰ðŸ‘†ðŸ¤›ðŸ‘‰ðŸ‘‰ðŸ¤›ðŸ‘ˆðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‰ðŸ‘‰ðŸ‘ŠðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‰ðŸ‘†ðŸ‘ŠðŸ‘‰ðŸ‘†ðŸ‘Š')
    parser.run()
